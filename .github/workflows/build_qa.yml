

name: Build QA Dataset

# 워크플로 트리거: main 브랜치에 원본이 변경되거나 수동 실행
on:
  push:
    branches: [main]
    paths:
      - 'data/raw/**'
      - 'scripts/**'
      - 'hongikjiki/**'
      - '.github/workflows/build_qa.yml'
  workflow_dispatch:

# 동시에 한 번만 실행되도록 설정 (이전 실행이 있으면 취소)
concurrency:
  group: build-qa
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      # 1) 저장소 체크아웃
      - uses: actions/checkout@v4

      # 2) 파이썬 환경 설정 (3.10 고정, pip 캐싱)
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'pip'

      # 3) 의존성 설치
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install -e .

      # 4) QA 데이터셋 생성
      - name: Generate QA dataset
        run: |
          python -m hongikjiki.document_manager update_documents --data-dir data/raw
          python scripts/aggregate_qa.py --out data/qa/high_insight_qa_dataset.jsonl

      # 5) QA 데이터셋 검증 (형식·중복 등)
      - name: Validate QA dataset
        run: |
          python scripts/qa_lint.py data/qa/high_insight_qa_dataset.jsonl

      # 6) Artefact 업로드 (다른 워크플로/사용자가 다운로드 가능)
      - name: Upload artefact
        uses: actions/upload-artifact@v4
        with:
          name: high_insight_qa_dataset_${{ github.sha }}
          path: data/qa/high_insight_qa_dataset.jsonl

      # 7) (옵션) S3 배포: main 브랜치에서만 실행
      - name: Deploy to S3
        if: github.ref == 'refs/heads/main'
        env:
          AWS_ROLE_ARN: ${{ secrets.DEPLOY_ROLE }}
        run: |
          aws s3 cp data/qa/high_insight_qa_dataset.jsonl \
            s3://hongikjiki/qa/latest.jsonl --acl public-read#
